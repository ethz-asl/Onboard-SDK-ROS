<launch>
  <arg name="mav_name" default="falcon"/>
  <arg name="namespace" default="$(arg mav_name)" />
  <rosparam file="$(find dji_sdk)/resources/capabilities.yaml"/>
  <group ns="$(arg namespace)" >
  
    <node name="dji_sdk" pkg="dji_sdk" type="dji_sdk_node" output="screen">
      <param name="serial_name" type="string" value="/dev/ttyUSB0"/>
      <param name="baud_rate" type="int" value="921600"/>
      <param name="app_id" type="int" value="1027253"/>
      <param name="app_version" type="int" value="1"/>
      <param name="app_bundle_id" type="string" value="Welcome to use dji-sdk"/>
      <param name="enc_key" type="string" value="2267d8cc7874b641a2d16798afb659ba4876b5dfd9b0a0e471c00e188b5c9ed3"/>
      <param name="groundstation_enable" type="int" value="1"/>
    </node>

    <node name="pose_sensor_rovio" pkg="msf_updates" type="pose_sensor" clear_params="true" output="screen">
      <remap from="msf_core/imu_state_input" to="dji_ros/imu" />
      <remap from="msf_updates/transform_input" to="rovio/transform" />
      <rosparam file="$(find dji_sdk)/resources/msf_parameters_vision_realsense-2017-02-26.yaml"/>
      <param name="capability_group" value="Core" />
     </node>

    <node name="mav_linear_mpc" pkg="mav_linear_mpc" type="mav_linear_mpc_node"  respawn="true" clear_params="true" output="screen">
      <remap from="odometry" to="msf_core/odometry" />
      <param name="use_rc_teleop" value="false" />
      <remap from="command/roll_pitch_yawrate_thrust" to="fcu/command/roll_pitch_yawrate_thrust" />
      <rosparam file="$(find mav_linear_mpc)/resources/linear_mpc_rovio_$(arg mav_name).yaml"/>
      <rosparam file="$(find mav_disturbance_observer)/resources/disturbance_observer_$(arg mav_name).yaml"/>
      <param name="capability_group" value="Core" />
    </node>
    
    <node pkg="realsense_ros" type="zr300node" name="realsense_zr300">
      <param name="imu/intrinsics_yaml" value="$(find dji_sdk)/resources/sensors/intel2/realsense.yaml"/>
      <param name="imu/publish_sensors_inidividually" value="false"/>

      <param name="depth/width" value="640"/>
      <param name="depth/height" value="480"/>
      <param name="depth/fps" value="30"/>
      <param name="depth/enabled" value="false"/>
      <param name="depth/subsample_factor" value="3"/>

      <param name="infrared/enabled" value="false"/>

      <param name="color/width" value="640"/>
      <param name="color/height" value="480"/>
      <param name="color/fps" value="30"/>
      <param name="color/enabled" value="false"/>
      <param name="color/subsample_factor" value="3"/>

      <param name="fisheye/width" value="640"/>
      <param name="fisheye/height" value="480"/>
      <param name="fisheye/fps" value="30"/>
      <param name="fisheye/enabled" value="true"/>
      <param name="fisheye/subsample_factor" value="1"/>
      <param name="pointcloud/enabled" value="false"/>
    </node>

    <node name="rovio" pkg="rovio" type="rovio_node" output="screen">
      <param name="filter_config" value="$(find dji_sdk)/resources/sensors/intel2/rovio_filter.info" />
      <param name="camera0_config" value="$(find dji_sdk)/resources/sensors/intel2/rovio_cam.yaml" />
      <remap from="cam0/image_raw" to="fisheye/fisheye"/>
      <remap from="imu0" to="imu/compensated"/>
      <param name="world_frame" value="odom"/>
      <param name="capability_group" value="Rovio" />
    </node>
   
   <!-- Init Rovio Yaw-->
    <node pkg="rovio" type="init_rovio_enu.py" name="init_rovio_enu" output="screen">
      <remap from="mag_imu" to="dji_ros/imu" />
    </node>
   
    <node name="waypoint_navigator_node" pkg="waypoint_navigator" type="waypoint_navigator_node"  respawn="true" clear_params="true" output="screen">
      <rosparam file="$(find dji_sdk)/resources/trajectory_exp_m100_rect_1m.yaml"/>
      <param name="mav_name" type="string" value="$(arg namespace)" />
      <!-- Real -->
      <!-- remap from="odometry" to="msf_core/odometry" / -->
      <!-- Simulation -->
      <!-- <remap from="odometry" to="ground_truth/odometry" /> -->
      <remap from="odometry" to="msf_core/odometry" />
    </node>

    <node name="trajectory_sampler" pkg="mav_trajectory_generation_ros" type="trajectory_sampler_node" output="screen" />
    
  </group>
</launch>
